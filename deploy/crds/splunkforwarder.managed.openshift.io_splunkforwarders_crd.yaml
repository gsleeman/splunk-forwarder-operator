apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: splunkforwarders.splunkforwarder.managed.openshift.io
spec:
  group: splunkforwarder.managed.openshift.io
  names:
    kind: SplunkForwarder
    listKind: SplunkForwarderList
    plural: splunkforwarders
    singular: splunkforwarder
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SplunkForwarder is the Schema for the splunkforwarders API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SplunkForwarderSpec defines the desired state of SplunkForwarder
          properties:
            auditPolicy:
              description: AuditPolicy is the struct for audit policy rules, index,
                etc
              properties:
                index:
                  type: string
                rules:
                  items:
                    description: PolicyRule maps requests based off metadata to an
                      audit Level. Requests must match the rules of every field (an
                      intersection of rules).
                    properties:
                      level:
                        description: The Level that requests matching this rule are
                          recorded at.
                        type: string
                      namespaces:
                        description: Namespaces that this rule matches. The empty
                          string "" matches non-namespaced resources. An empty list
                          implies every namespace.
                        items:
                          type: string
                        type: array
                      nonResourceURLs:
                        description: 'NonResourceURLs is a set of URL paths that should
                          be audited. *s are allowed, but only as the full, final
                          step in the path. Examples:  "/metrics" - Log requests for
                          apiserver metrics  "/healthz*" - Log all health checks'
                        items:
                          type: string
                        type: array
                      omitStages:
                        description: OmitStages is a list of stages for which no events
                          are created. Note that this can also be specified policy
                          wide in which case the union of both are omitted. An empty
                          list means no restrictions will apply.
                        items:
                          description: Stage defines the stages in request handling
                            that audit events may be generated.
                          type: string
                        type: array
                      resources:
                        description: Resources that this rule matches. An empty list
                          implies all kinds in all API groups.
                        items:
                          description: GroupResources represents resource kinds in
                            an API group.
                          properties:
                            group:
                              description: Group is the name of the API group that
                                contains the resources. The empty string represents
                                the core API group.
                              type: string
                            resourceNames:
                              description: ResourceNames is a list of resource instance
                                names that the policy matches. Using this field requires
                                Resources to be specified. An empty list implies that
                                every instance of the resource is matched.
                              items:
                                type: string
                              type: array
                            resources:
                              description: "Resources is a list of resources this
                                rule applies to. \n For example: 'pods' matches pods.
                                'pods/log' matches the log subresource of pods. '*'
                                matches all resources and their subresources. 'pods/*'
                                matches all subresources of pods. '*/scale' matches
                                all scale subresources. \n If wildcard is present,
                                the validation rule will ensure resources do not overlap
                                with each other. \n An empty list implies all resources
                                and subresources in this API groups apply."
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      userGroups:
                        description: The user groups this rule applies to. A user
                          is considered matching if it is a member of any of the UserGroups.
                          An empty list implies every user group.
                        items:
                          type: string
                        type: array
                      users:
                        description: The users (by authenticated user name) this rule
                          applies to. An empty list implies every user.
                        items:
                          type: string
                        type: array
                      verbs:
                        description: The verbs that match this rule. An empty list
                          implies every verb.
                        items:
                          type: string
                        type: array
                    required:
                    - level
                    type: object
                  type: array
              required:
              - index
              - rules
              type: object
            clusterID:
              type: string
            filters:
              items:
                description: SplunkFilter is the stuct for filters
                properties:
                  filter:
                    type: string
                  name:
                    type: string
                required:
                - filter
                - name
                type: object
              type: array
            heavyForwarderDigest:
              type: string
            heavyForwarderImage:
              type: string
            heavyForwarderReplicas:
              format: int32
              type: integer
            heavyForwarderSelector:
              type: string
            image:
              type: string
            imageDigest:
              type: string
            imageTag:
              type: string
            splunkInputs:
              items:
                description: SplunkForwarderInputs is the struct that defines all
                  the splunk inputs
                properties:
                  blackList:
                    type: string
                  index:
                    type: string
                  path:
                    type: string
                  sourceType:
                    type: string
                  whiteList:
                    type: string
                required:
                - path
                type: object
              type: array
            splunkLicenseAccepted:
              type: boolean
            useHeavyForwarder:
              type: boolean
          required:
          - image
          - splunkInputs
          type: object
        status:
          description: SplunkForwarderStatus defines the observed state of SplunkForwarder
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
